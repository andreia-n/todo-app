{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\annegrea\\\\projects\\\\homework\\\\homework-app\\\\src\\\\components\\\\Task\\\\EditTasks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport '../Task/AddTasks.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditTask = props => {\n  _s();\n\n  console.log(props.curentTask);\n  const [task, setTask] = useState(props.curentTask);\n  const {\n    title,\n    timeStart,\n    timeEnd\n  } = props.curentTask;\n  const [enteredTask, setEnteredTask] = useState(title);\n  const [enteredTimeStart, setenteredTimeStart] = useState(time);\n  const [enteredTimeEnd, setenteredTimeEnd] = useState(''); // useEffect(() => {\n  //   setTask(props.curentTask);\n  // }, [props]);\n\n  const handlerTask = e => {\n    setTask(e.target.value);\n  };\n\n  const handlerTimeStart = e => {\n    setTask(e.target.value);\n  };\n\n  const handlerTimeEnd = e => {\n    setTask(e.target.value);\n  }; // const handleInputChange = (event) => {\n  //   const { name, value } = event.target;\n  //   setTask({ ...task, [name]: value });\n  // };\n\n\n  const handlerUpdate = e => {\n    e.preventDefault();\n    props.updateTask(task.id, task);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlerUpdate,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-task_controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-task_control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Task \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"task\",\n            placeholder: \"Add your task\",\n            value: title,\n            onChange: handlerTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-task_control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Time Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"timeStart\",\n            placeholder: \"When do you want to start\",\n            value: timeStart,\n            onChange: handlerTimeStart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-task_control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Time End\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"timeEnd\",\n            placeholder: \"When do you want to finish\",\n            value: timeEnd,\n            onChange: handlerTimeEnd\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-task_actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Update Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => props.setEditing(false),\n          children: \"Cancel Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditTask, \"wSBtzLqCOMft3wc+wgYFxAckDL0=\");\n\n_c = EditTask;\nexport default EditTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTask\");","map":{"version":3,"sources":["C:/Users/annegrea/projects/homework/homework-app/src/components/Task/EditTasks.js"],"names":["React","useState","useEffect","EditTask","props","console","log","curentTask","task","setTask","title","timeStart","timeEnd","enteredTask","setEnteredTask","enteredTimeStart","setenteredTimeStart","time","enteredTimeEnd","setenteredTimeEnd","handlerTask","e","target","value","handlerTimeStart","handlerTimeEnd","handlerUpdate","preventDefault","updateTask","id","setEditing"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,sBAAP;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,UAAlB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAACG,KAAK,CAACG,UAAP,CAAhC;AACA,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA,SAAT;AAAoBC,IAAAA;AAApB,MAAgCR,KAAK,CAACG,UAA5C;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAACS,KAAD,CAA9C;AACA,QAAM,CAACK,gBAAD,EAAmBC,mBAAnB,IAA0Cf,QAAQ,CAACgB,IAAD,CAAxD;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsClB,QAAQ,CAAC,EAAD,CAApD,CAN0B,CAO1B;AACA;AACA;;AAEA,QAAMmB,WAAW,GAAIC,CAAD,IAAO;AACzBZ,IAAAA,OAAO,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAIH,CAAD,IAAO;AAC9BZ,IAAAA,OAAO,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAFD;;AAGA,QAAME,cAAc,GAAIJ,CAAD,IAAO;AAC5BZ,IAAAA,OAAO,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAFD,CAlB0B,CAsB1B;AACA;AAEA;AACA;;;AAEA,QAAMG,aAAa,GAAIL,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACM,cAAF;AACAvB,IAAAA,KAAK,CAACwB,UAAN,CAAiBpB,IAAI,CAACqB,EAAtB,EAA0BrB,IAA1B;AACD,GAHD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEkB,aAAhB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,WAAW,EAAC,eAHd;AAIE,YAAA,KAAK,EAAEhB,KAJT;AAKE,YAAA,QAAQ,EAAEU;AALZ;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,IAAI,EAAC,WAFP;AAGE,YAAA,WAAW,EAAC,2BAHd;AAIE,YAAA,KAAK,EAAET,SAJT;AAKE,YAAA,QAAQ,EAAEa;AALZ;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,eAqBE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,IAAI,EAAC,SAFP;AAGE,YAAA,WAAW,EAAC,4BAHd;AAIE,YAAA,KAAK,EAAEZ,OAJT;AAKE,YAAA,QAAQ,EAAEa;AALZ;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAiCE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAE,MAAMrB,KAAK,CAAC0B,UAAN,CAAiB,KAAjB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD,CA1ED;;GAAM3B,Q;;KAAAA,Q;AA4EN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../Task/AddTasks.css';\r\nconst EditTask = (props) => {\r\n  console.log(props.curentTask);\r\n  const [task, setTask] = useState(props.curentTask);\r\n  const { title, timeStart, timeEnd } = props.curentTask;\r\n  const [enteredTask, setEnteredTask] = useState(title);\r\n  const [enteredTimeStart, setenteredTimeStart] = useState(time);\r\n  const [enteredTimeEnd, setenteredTimeEnd] = useState('');\r\n  // useEffect(() => {\r\n  //   setTask(props.curentTask);\r\n  // }, [props]);\r\n\r\n  const handlerTask = (e) => {\r\n    setTask(e.target.value);\r\n  };\r\n\r\n  const handlerTimeStart = (e) => {\r\n    setTask(e.target.value);\r\n  };\r\n  const handlerTimeEnd = (e) => {\r\n    setTask(e.target.value);\r\n  };\r\n\r\n  // const handleInputChange = (event) => {\r\n  //   const { name, value } = event.target;\r\n\r\n  //   setTask({ ...task, [name]: value });\r\n  // };\r\n\r\n  const handlerUpdate = (e) => {\r\n    e.preventDefault();\r\n    props.updateTask(task.id, task);\r\n  };\r\n  return (\r\n    <div className='add-form'>\r\n      <form onSubmit={handlerUpdate}>\r\n        <div className='new-task_controls'>\r\n          <div className='new-task_control'>\r\n            <label>Task </label>\r\n            <input\r\n              type='text'\r\n              name='task'\r\n              placeholder='Add your task'\r\n              value={title}\r\n              onChange={handlerTask}\r\n            />\r\n          </div>\r\n          <div className='new-task_control'>\r\n            <label>Time Start</label>\r\n            <input\r\n              type='text'\r\n              name='timeStart'\r\n              placeholder='When do you want to start'\r\n              value={timeStart}\r\n              onChange={handlerTimeStart}\r\n            />\r\n          </div>\r\n          <div className='new-task_control'>\r\n            <label>Time End</label>\r\n            <input\r\n              type='text'\r\n              name='timeEnd'\r\n              placeholder='When do you want to finish'\r\n              value={timeEnd}\r\n              onChange={handlerTimeEnd}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='new-task_actions'>\r\n          <button>Update Task</button>\r\n          <button onClick={() => props.setEditing(false)}>Cancel Update</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditTask;\r\n"]},"metadata":{},"sourceType":"module"}