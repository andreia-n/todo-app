{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\annegrea\\\\Downloads\\\\homework tsc\\\\homework-app\\\\src\\\\components\\\\pages\\\\login\\\\Login.tsx\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"./login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  email: \"\",\n  password: \"\"\n};\nconst regexPass = /^(?=.*[a-z])(?=.*[A-Z])(?=.*d)[a-zA-Zd]/;\nconst LoginValidation = Yup.object().shape({\n  email: Yup.string().email().required(),\n  password: Yup.string() // .min(4, \"Password is too short\")\n  // .max(16, \"Password is too long\")\n  // .matches(\n  //   regexPass,\n  //   `Passwords must contain:\n  // a minimum of 1 upper case letter,\n  // a minimum of 1 lower case letter,\n  // a minimum of 1 numeric character\n  // a minimum of 1 special character\n  // `\n  // )\n  // .required(),\n  .required(\"Please Enter your password\").min(8, \"Password is too short - should be 8 chars minimum.\").matches(/[A-Z]+/, \"One uppercase character\").matches(/[a-z]+/, \"One lowercase character\").matches(/[a@$!%#?&]+/, \"One special character\").matches(/\\d+/, \"One number\") // .matches(\n  //   /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n  //   \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n  // ),\n\n});\n\nconst Login = () => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: LoginValidation,\n    onSubmit: (values, _ref) => {\n      let {\n        setSubmitting\n      } = _ref;\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 500);\n    },\n    initialTouched: {\n      field: true\n    },\n    validateOnChange: true,\n    validateOnMount: true,\n    children: _ref2 => {\n      let {\n        handleChange,\n        handleBlur,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        touched\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"login-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputField\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"email\",\n                type: \"text\",\n                onChange: handleChange,\n                onBlur: handleBlur,\n                value: values.email,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [\" \", errors.email, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputField\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"Password:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"password\",\n                type: \"password\",\n                onChange: handleChange,\n                onBlur: handleBlur,\n                value: values.password,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [\" \", errors.password, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !isValid,\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/annegrea/Downloads/homework tsc/homework-app/src/components/pages/login/Login.tsx"],"names":["Formik","Yup","initialValues","email","password","regexPass","LoginValidation","object","shape","string","required","min","matches","Login","values","setSubmitting","setTimeout","alert","JSON","stringify","field","handleChange","handleBlur","handleSubmit","errors","isValid","touched","color"],"mappings":"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","sourcesContent":["import { Formik, Form, Field, FormikHelpers, FieldProps } from \"formik\"\r\nimport * as Yup from \"yup\"\r\nimport \"./login.css\"\r\nimport { debounce } from \"lodash\"\r\nimport { error } from \"console\"\r\n\r\ninterface FormValues {\r\n  email: string\r\n  password: string\r\n}\r\n\r\nconst initialValues: FormValues = { email: \"\", password: \"\" }\r\nconst regexPass = /^(?=.*[a-z])(?=.*[A-Z])(?=.*d)[a-zA-Zd]/\r\nconst LoginValidation = Yup.object().shape({\r\n  email: Yup.string().email().required(),\r\n  password: Yup.string()\r\n    // .min(4, \"Password is too short\")\r\n    // .max(16, \"Password is too long\")\r\n    // .matches(\r\n    //   regexPass,\r\n    //   `Passwords must contain:\r\n    // a minimum of 1 upper case letter,\r\n    // a minimum of 1 lower case letter,\r\n    // a minimum of 1 numeric character\r\n    // a minimum of 1 special character\r\n    // `\r\n    // )\r\n    // .required(),\r\n    .required(\"Please Enter your password\")\r\n    .min(8, \"Password is too short - should be 8 chars minimum.\")\r\n    .matches(/[A-Z]+/, \"One uppercase character\")\r\n    .matches(/[a-z]+/, \"One lowercase character\")\r\n    .matches(/[a@$!%#?&]+/, \"One special character\")\r\n    .matches(/\\d+/, \"One number\"),\r\n  // .matches(\r\n  //   /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n  //   \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\r\n  // ),\r\n})\r\n\r\nconst Login = () => {\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={LoginValidation}\r\n      onSubmit={(\r\n        values: FormValues,\r\n        { setSubmitting }: FormikHelpers<FormValues>\r\n      ) => {\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(values, null, 2))\r\n          setSubmitting(false)\r\n        }, 500)\r\n      }}\r\n      initialTouched={{\r\n        field: true,\r\n      }}\r\n      validateOnChange={true}\r\n      validateOnMount={true}\r\n    >\r\n      {({\r\n        handleChange,\r\n        handleBlur,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        touched,\r\n      }) => (\r\n        <div className='login-container'>\r\n          <form onSubmit={handleSubmit} className='login-form'>\r\n            <div className='inputField'>\r\n              <div className='field'>\r\n                <label htmlFor='email'>Email:</label>\r\n                <input\r\n                  name='email'\r\n                  type='text'\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.email}\r\n                  required\r\n                />\r\n\r\n                {errors.email && touched.email && (\r\n                  <p style={{ color: \"red\" }}> {errors.email} </p>\r\n                )}\r\n              </div>\r\n            </div>\r\n            \r\n            <div className='field'>\r\n              <div className='inputField'>\r\n                <label htmlFor='password'>Password:</label>\r\n                <input\r\n                  name='password'\r\n                  type='password'\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.password}\r\n                  required\r\n                />\r\n\r\n                {errors.password && touched.password && (\r\n                  <p style={{ color: \"red\" }}> {errors.password} </p>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <button type='submit' disabled={!isValid}>\r\n              Sign in\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </Formik>\r\n  )\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}