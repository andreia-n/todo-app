{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nexport const taskApi = createApi({\n  reducerPath: \"taskApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"http://localhost:3001\"\n  }),\n  tagTypes: [\"Task\"],\n  endpoints: builder => ({\n    //1. tipul parametrului pe care il returneaza serverul, 2. tipul parametrului pe care il trimiti\n    getTasks: builder.query({\n      query: () => \"/tasks\",\n      providesTags: [\"Task\"]\n    }),\n    addTask: builder.query({\n      query: body => ({\n        url: \"/tasks\",\n        method: \"POST\",\n        body: body\n      }) // invalidatesTags: [\"Task\"],\n\n    }),\n    deleteTask: builder.mutation({\n      query: id => ({\n        url: `/tasks/${id}`,\n        method: \"DELETE\"\n      }),\n      invalidatesTags: [\"Task\"]\n    }),\n    updateTask: builder.mutation({\n      query: _ref => {\n        let {\n          id,\n          ...body\n        } = _ref;\n        return {\n          url: `/tasks/${id}`,\n          method: \"PUT\",\n          body: body\n        };\n      },\n      invalidatesTags: [\"Task\"]\n    })\n  })\n});\nexport const {\n  useGetTasksQuery,\n  useLazyAddTaskQuery,\n  useDeleteTaskMutation,\n  useUpdateTaskMutation\n} = taskApi;","map":{"version":3,"sources":["C:/Users/annegrea/Downloads/homework tsc/homework-app/src/state/task/tasks-api.ts"],"names":["createApi","fetchBaseQuery","taskApi","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","builder","getTasks","query","providesTags","addTask","body","url","method","deleteTask","mutation","id","invalidatesTags","updateTask","useGetTasksQuery","useLazyAddTaskQuery","useDeleteTaskMutation","useUpdateTaskMutation"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAIA,OAAO,MAAMC,OAAO,GAAGF,SAAS,CAAC;AAC/BG,EAAAA,WAAW,EAAE,SADkB;AAE/BC,EAAAA,SAAS,EAAEH,cAAc,CAAC;AAAEI,IAAAA,OAAO,EAAE;AAAX,GAAD,CAFM;AAG/BC,EAAAA,QAAQ,EAAE,CAAC,MAAD,CAHqB;AAI/BC,EAAAA,SAAS,EAAGC,OAAD,KAAc;AACvB;AACAC,IAAAA,QAAQ,EAAED,OAAO,CAACE,KAAR,CAA4B;AACpCA,MAAAA,KAAK,EAAE,MAAM,QADuB;AAEpCC,MAAAA,YAAY,EAAE,CAAC,MAAD;AAFsB,KAA5B,CAFa;AAOvBC,IAAAA,OAAO,EAAEJ,OAAO,CAACE,KAAR,CAA4B;AACnCA,MAAAA,KAAK,EAAGG,IAAD,KAAW;AAChBC,QAAAA,GAAG,EAAE,QADW;AAEhBC,QAAAA,MAAM,EAAE,MAFQ;AAGhBF,QAAAA,IAAI,EAAEA;AAHU,OAAX,CAD4B,CAMnC;;AANmC,KAA5B,CAPc;AAevBG,IAAAA,UAAU,EAAER,OAAO,CAACS,QAAR,CAAiC;AAC3CP,MAAAA,KAAK,EAAGQ,EAAD,KAAS;AACdJ,QAAAA,GAAG,EAAG,UAASI,EAAG,EADJ;AAEdH,QAAAA,MAAM,EAAE;AAFM,OAAT,CADoC;AAK3CI,MAAAA,eAAe,EAAE,CAAC,MAAD;AAL0B,KAAjC,CAfW;AAsBvBC,IAAAA,UAAU,EAAEZ,OAAO,CAACS,QAAR,CAA+B;AACzCP,MAAAA,KAAK,EAAE;AAAA,YAAC;AAAEQ,UAAAA,EAAF;AAAM,aAAGL;AAAT,SAAD;AAAA,eAAsB;AAC3BC,UAAAA,GAAG,EAAG,UAASI,EAAG,EADS;AAE3BH,UAAAA,MAAM,EAAE,KAFmB;AAG3BF,UAAAA,IAAI,EAAEA;AAHqB,SAAtB;AAAA,OADkC;AAMzCM,MAAAA,eAAe,EAAE,CAAC,MAAD;AANwB,KAA/B;AAtBW,GAAd;AAJoB,CAAD,CAAzB;AAqCP,OAAO,MAAM;AACXE,EAAAA,gBADW;AAEXC,EAAAA,mBAFW;AAGXC,EAAAA,qBAHW;AAIXC,EAAAA;AAJW,IAKTtB,OALG","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\"\r\n\r\nimport { Task } from \"../../common/interface/Task\"\r\n\r\nexport const taskApi = createApi({\r\n  reducerPath: \"taskApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl: \"http://localhost:3001\" }),\r\n  tagTypes: [\"Task\"],\r\n  endpoints: (builder) => ({\r\n    //1. tipul parametrului pe care il returneaza serverul, 2. tipul parametrului pe care il trimiti\r\n    getTasks: builder.query<Task[], void>({\r\n      query: () => \"/tasks\",\r\n      providesTags: [\"Task\"],\r\n    }),\r\n\r\n    addTask: builder.query<Task[], Task>({\r\n      query: (body) => ({\r\n        url: \"/tasks\",\r\n        method: \"POST\",\r\n        body: body,\r\n      }),\r\n      // invalidatesTags: [\"Task\"],\r\n    }),\r\n    deleteTask: builder.mutation<Task[], number>({\r\n      query: (id) => ({\r\n        url: `/tasks/${id}`,\r\n        method: \"DELETE\",\r\n      }),\r\n      invalidatesTags: [\"Task\"],\r\n    }),\r\n    updateTask: builder.mutation<Task[], Task>({\r\n      query: ({ id, ...body }) => ({\r\n        url: `/tasks/${id}`,\r\n        method: \"PUT\",\r\n        body: body,\r\n      }),\r\n      invalidatesTags: [\"Task\"],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useGetTasksQuery,\r\n  useLazyAddTaskQuery,\r\n  useDeleteTaskMutation,\r\n  useUpdateTaskMutation,\r\n} = taskApi\r\n"]},"metadata":{},"sourceType":"module"}