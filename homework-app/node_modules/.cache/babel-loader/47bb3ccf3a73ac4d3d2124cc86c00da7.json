{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\annegrea\\\\Downloads\\\\homework tsc\\\\homework-app\\\\src\\\\AppWrapper.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport axios from \"./axios\";\nimport AddTask from \"./components/Task/AddTask\";\nimport EditTask from \"./components/Task/EditTasks\";\nimport TaskList from \"./components/Task/TaskList\";\nimport Header from \"./components/header/Header\";\nimport { useGetTasksQuery } from \"./state/task/tasks-api\";\nimport { useTaskList } from \"./state/task/task.selector\";\nimport { useAppDispatch } from \"./hooks/redux.hook\";\nimport { setTasks } from \"./state/task/task.reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AppWrapper = () => {\n  _s();\n\n  const tasks = useTaskList();\n  const dispatch = useAppDispatch(); //state for edititng mode\n\n  const [editing, setEditing] = useState(false);\n  const initialFormState = {\n    id: 1,\n    title: \"\",\n    timeStart: \"\",\n    timeEnd: \"\"\n  };\n  const [curentTask, setCurentTask] = useState(initialFormState);\n\n  const editTask = task => {\n    setEditing(true);\n    setCurentTask({\n      id: task.id,\n      title: task.title,\n      timeStart: task.timeStart,\n      timeEnd: task.timeEnd\n    });\n  }; // const updateTask = async (id: number, task: Task) => {\n  //   setEditing(false)\n  //   const res = await axios.put(`/tasks/${task.id}`, task)\n  //   console.log(res.data)\n  //   dispatch(\n  //     setTasks(\n  //       tasks?.map((task) => {\n  //         return task.id === id ? { ...res.data } : task\n  //       })\n  //     )\n  //   )\n  //   // console.log(res.data);\n  // }\n  //delete task\n\n\n  const deleteTask = async id => {\n    await axios.delete(`/tasks/${id}`);\n    const newTasksList = tasks.filter(task => task.id !== id);\n    dispatch(setTasks(newTasksList));\n  }; //update task\n\n\n  const {\n    isLoading: isTasksLoading\n  } = useGetTasksQuery();\n  useEffect(() => {// dispatch(setTasks(tasks))\n  }, [tasks]);\n  if (isTasksLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading Tasks.....\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 30\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-add\",\n        children: editing ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Editing Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(EditTask, {\n            setEditing: setEditing,\n            curentTask: curentTask // updateTask={updateTask}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Add Tasks for today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AddTask, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-tasks\",\n        children: [(tasks === null || tasks === void 0 ? void 0 : tasks.length) === 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No tasks found for today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 35\n        }, this), (tasks === null || tasks === void 0 ? void 0 : tasks.length) !== 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Tasks for Today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n            tasks: tasks,\n            editTask: editTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppWrapper, \"u+e84TfgN/FvXl/BzOm8fChf6Nk=\", false, function () {\n  return [useTaskList, useAppDispatch, useGetTasksQuery];\n});\n\n_c = AppWrapper;\nexport default AppWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppWrapper\");","map":{"version":3,"sources":["C:/Users/annegrea/Downloads/homework tsc/homework-app/src/AppWrapper.tsx"],"names":["React","useState","useEffect","axios","AddTask","EditTask","TaskList","Header","useGetTasksQuery","useTaskList","useAppDispatch","setTasks","AppWrapper","tasks","dispatch","editing","setEditing","initialFormState","id","title","timeStart","timeEnd","curentTask","setCurentTask","editTask","task","deleteTask","delete","newTasksList","filter","isLoading","isTasksLoading","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport \"./App.css\"\r\nimport axios from \"./axios\"\r\nimport AddTask from \"./components/Task/AddTask\"\r\nimport EditTask from \"./components/Task/EditTasks\"\r\nimport TaskList from \"./components/Task/TaskList\"\r\nimport Header from \"./components/header/Header\"\r\nimport { Task } from \"./common/interface/Task\"\r\nimport { useGetTasksQuery } from \"./state/task/tasks-api\"\r\nimport { useTaskList } from \"./state/task/task.selector\"\r\nimport { useAppDispatch } from \"./hooks/redux.hook\"\r\nimport { setTasks } from \"./state/task/task.reducer\"\r\n\r\nconst AppWrapper = () => {\r\n  const tasks = useTaskList()\r\n  const dispatch = useAppDispatch()\r\n  //state for edititng mode\r\n  const [editing, setEditing] = useState<boolean>(false)\r\n  const initialFormState = {\r\n    id: 1,\r\n    title: \"\",\r\n    timeStart: \"\",\r\n    timeEnd: \"\",\r\n  }\r\n  const [curentTask, setCurentTask] = useState(initialFormState)\r\n\r\n  const editTask = (task: Task) => {\r\n    setEditing(true)\r\n\r\n    setCurentTask({\r\n      id: task.id!,\r\n      title: task.title,\r\n      timeStart: task.timeStart,\r\n      timeEnd: task.timeEnd,\r\n    })\r\n  }\r\n\r\n  // const updateTask = async (id: number, task: Task) => {\r\n  //   setEditing(false)\r\n  //   const res = await axios.put(`/tasks/${task.id}`, task)\r\n\r\n  //   console.log(res.data)\r\n  //   dispatch(\r\n  //     setTasks(\r\n  //       tasks?.map((task) => {\r\n  //         return task.id === id ? { ...res.data } : task\r\n  //       })\r\n  //     )\r\n  //   )\r\n  //   // console.log(res.data);\r\n  // }\r\n\r\n  //delete task\r\n  const deleteTask = async (id: number) => {\r\n    await axios.delete(`/tasks/${id}`)\r\n    const newTasksList = tasks!.filter((task) => task.id !== id)\r\n    dispatch(setTasks(newTasksList))\r\n  }\r\n  //update task\r\n  const { isLoading: isTasksLoading } = useGetTasksQuery()\r\n\r\n  useEffect(() => {\r\n    // dispatch(setTasks(tasks))\r\n  }, [tasks])\r\n  if (isTasksLoading) return <p>Loading Tasks.....</p>\r\n  return (\r\n    <div className='container'>\r\n      <Header />\r\n\r\n      <div className='flex-row'>\r\n        <div className='flex-add'>\r\n          {editing ? (\r\n            <React.Fragment>\r\n              <h2>Editing Task</h2>\r\n              <EditTask\r\n                setEditing={setEditing}\r\n                curentTask={curentTask}\r\n                // updateTask={updateTask}\r\n              />\r\n            </React.Fragment>\r\n          ) : (\r\n            <div>\r\n              <h2>Add Tasks for today</h2>\r\n              <AddTask />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className='flex-tasks'>\r\n          {tasks?.length === 0 && <h2>No tasks found for today</h2>}\r\n          {tasks?.length !== 0 && (\r\n            <>\r\n              <h2>Tasks for Today</h2>\r\n              <TaskList tasks={tasks!} editTask={editTask} />\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppWrapper\r\n"]},"metadata":{},"sourceType":"module"}