{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\annegrea\\\\Downloads\\\\homework tsc\\\\homework-app\\\\src\\\\components\\\\pages\\\\login\\\\Login.tsx\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"./login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  email: \"\",\n  password: \"\"\n};\nconst LoginValidation = Yup.object().shape({\n  email: Yup.string().email().required(),\n  password: Yup.string().required(\"Please enter your password\").min(8, \"Password is too short - should be 8 chars minimum.\").matches(/[A-Z]+/, \"One uppercase character\").matches(/[a-z]+/, \"One lowercase character\").matches(/[a@$!%#?&]+/, \"One special character\").matches(/\\d+/, \"One number\")\n});\n\nconst renderError = message => {\n  if (!message) return null;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"error-mesage\",\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n};\n\nconst Login = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"loginContainer\",\n  children: /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: LoginValidation,\n    onSubmit: (values, _ref) => {\n      let {\n        setSubmitting\n      } = _ref;\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 500);\n    },\n    children: _ref2 => {\n      let {\n        errors,\n        touched,\n        isValid,\n        dirty\n      } = _ref2;\n      console.log(errors.password);\n      return /*#__PURE__*/_jsxDEV(Form, {\n        className: \"loginForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formField\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"email\",\n            name: \"email\" // type='text'\n            ,\n            placeholder: \"Enter your email\",\n            autoComplete: \"off\" // value={values.email}\n            ,\n            errors: errors,\n            className: errors.email ? \"errorInput\" : \"defaultInput \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), renderError(errors.email)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formField\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"password\",\n            name: \"password\",\n            type: \"password\",\n            placeholder: \"Enter your password\",\n            autoComplete: \"off\" // value={values.password}\n            ,\n            errors: errors,\n            className: errors.password ? \"errorInput\" : \"defaultInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), renderError(errors.password)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !(isValid && dirty),\n          children: \"Signin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 35,\n  columnNumber: 3\n}, this);\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/annegrea/Downloads/homework tsc/homework-app/src/components/pages/login/Login.tsx"],"names":["Formik","Form","Field","Yup","initialValues","email","password","LoginValidation","object","shape","string","required","min","matches","renderError","message","Login","values","setSubmitting","setTimeout","alert","JSON","stringify","errors","touched","isValid","dirty","console","log"],"mappings":"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","sourcesContent":["import {\r\n  Formik,\r\n  Form,\r\n  Field,\r\n  FormikHelpers,\r\n  ErrorMessage,\r\n  FormikErrors,\r\n  FormikTouched,\r\n} from \"formik\"\r\nimport * as Yup from \"yup\"\r\nimport \"./login.css\"\r\n\r\ninterface FormValues {\r\n  email: string\r\n  password: string\r\n}\r\nconst initialValues: FormValues = { email: \"\", password: \"\" }\r\n\r\nconst LoginValidation = Yup.object().shape({\r\n  email: Yup.string().email().required(),\r\n  password: Yup.string()\r\n    .required(\"Please enter your password\")\r\n    .min(8, \"Password is too short - should be 8 chars minimum.\")\r\n    .matches(/[A-Z]+/, \"One uppercase character\")\r\n    .matches(/[a-z]+/, \"One lowercase character\")\r\n    .matches(/[a@$!%#?&]+/, \"One special character\")\r\n    .matches(/\\d+/, \"One number\"),\r\n})\r\n\r\nconst renderError = (message?: string) => {\r\n  if (!message) return null\r\n  return <p className='error-mesage'>{message}</p>\r\n}\r\nconst Login = () => (\r\n  <div className='loginContainer'>\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={LoginValidation}\r\n      onSubmit={(\r\n        values: FormValues,\r\n        { setSubmitting }: FormikHelpers<FormValues>\r\n      ) => {\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(values, null, 2))\r\n          setSubmitting(false)\r\n        }, 500)\r\n      }}\r\n    >\r\n      {({ errors, touched, isValid, dirty,  }) => {\r\n        console.log(errors.password)\r\n\r\n        return (\r\n          <Form className='loginForm'>\r\n            <div className='formField'>\r\n              <label> Email</label>\r\n              <Field\r\n                id='email'\r\n                name='email'\r\n                // type='text'\r\n                placeholder='Enter your email'\r\n                autoComplete='off'\r\n                // value={values.email}\r\n                errors={errors}\r\n                className={errors.email ? \"errorInput\" : \"defaultInput \"}\r\n              />\r\n              {renderError(errors.email)}\r\n            </div>\r\n\r\n            <div className='formField'>\r\n              <label> Password</label>\r\n              <Field\r\n                id='password'\r\n                name='password'\r\n                type='password'\r\n                placeholder='Enter your password'\r\n                autoComplete='off'\r\n                // value={values.password}\r\n                errors={errors}\r\n                className={errors.password ? \"errorInput\" : \"defaultInput\"}\r\n              />\r\n              {renderError(errors.password)}\r\n            </div>\r\n\r\n            <button disabled={!(isValid && dirty)}>Signin</button>\r\n          </Form>\r\n        )\r\n      }}\r\n    </Formik>\r\n  </div>\r\n)\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}