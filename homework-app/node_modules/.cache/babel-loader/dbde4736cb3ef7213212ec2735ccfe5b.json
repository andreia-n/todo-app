{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\annegrea\\\\projects\\\\homework\\\\homework-app\\\\src\\\\components\\\\Task\\\\AddTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../Task/AddTasks.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddTask = props => {\n  _s();\n\n  const [enteredTask, setEnteredTask] = useState('');\n  const [enteredTimeStart, setenteredTimeStart] = useState('');\n  const [enteredTimeEnd, setenteredTimeEnd] = useState('');\n  const [isValid, setIsValid] = useState(false);\n\n  const handlerTask = e => {\n    setEnteredTask(e.target.value);\n  };\n\n  const handlerTimeStart = e => {\n    setenteredTimeStart(e.target.value);\n  };\n\n  const handlerTimeEnd = e => {\n    setenteredTimeEnd(e.target.value);\n  };\n\n  const handlerSubmit = e => {\n    e.preventDefault();\n\n    if (enteredTask.trim().length === 0 || enteredTimeStart.trim().length === 0 || enteredTimeEnd.trim().length === 0) {\n      setIsValid(false); // alert('All fields are mandatory');\n\n      return;\n    }\n\n    setIsValid(true);\n    const taskData = {\n      title: enteredTask,\n      timeStart: enteredTimeStart,\n      timeEnd: enteredTimeEnd\n    };\n    props.addTask(taskData);\n    setEnteredTask('');\n    setenteredTimeStart('');\n    setenteredTimeEnd('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlerSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-task_controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-task_control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Task \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"task\",\n            placeholder: \"Add your task\",\n            value: enteredTask,\n            onChange: handlerTask,\n            autocomplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Field must not be em\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-task_control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Time Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"timeStart\",\n            placeholder: \"When do you want to start\",\n            value: enteredTimeStart,\n            onChange: handlerTimeStart,\n            autocomplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-task_control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Time End\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"timeEnd\",\n            placeholder: \"When do you want to finish\",\n            value: enteredTimeEnd,\n            onChange: handlerTimeEnd,\n            autocomplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-task_actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddTask, \"AZ57+gdSFIfA4nPX2qHt/Ql6Z8A=\");\n\n_c = AddTask;\nexport default AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["C:/Users/annegrea/projects/homework/homework-app/src/components/Task/AddTask.js"],"names":["React","useState","AddTask","props","enteredTask","setEnteredTask","enteredTimeStart","setenteredTimeStart","enteredTimeEnd","setenteredTimeEnd","isValid","setIsValid","handlerTask","e","target","value","handlerTimeStart","handlerTimeEnd","handlerSubmit","preventDefault","trim","length","taskData","title","timeStart","timeEnd","addTask"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport '../Task/AddTasks.css';\r\nconst AddTask = (props) => {\r\n  const [enteredTask, setEnteredTask] = useState('');\r\n  const [enteredTimeStart, setenteredTimeStart] = useState('');\r\n  const [enteredTimeEnd, setenteredTimeEnd] = useState('');\r\n\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const handlerTask = (e) => {\r\n    setEnteredTask(e.target.value);\r\n  };\r\n\r\n  const handlerTimeStart = (e) => {\r\n    setenteredTimeStart(e.target.value);\r\n  };\r\n  const handlerTimeEnd = (e) => {\r\n    setenteredTimeEnd(e.target.value);\r\n  };\r\n  const handlerSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      enteredTask.trim().length === 0 ||\r\n      enteredTimeStart.trim().length === 0 ||\r\n      enteredTimeEnd.trim().length === 0\r\n    ) {\r\n      setIsValid(false);\r\n      // alert('All fields are mandatory');\r\n      return;\r\n    }\r\n    setIsValid(true);\r\n    const taskData = {\r\n      title: enteredTask,\r\n      timeStart: enteredTimeStart,\r\n      timeEnd: enteredTimeEnd,\r\n    };\r\n    props.addTask(taskData);\r\n\r\n    setEnteredTask('');\r\n    setenteredTimeStart('');\r\n    setenteredTimeEnd('');\r\n  };\r\n\r\n  return (\r\n    <div className='add-form'>\r\n      <form onSubmit={handlerSubmit}>\r\n        <div className='new-task_controls'>\r\n          <div className='new-task_control'>\r\n            <label>Task </label>\r\n            <input\r\n              type='text'\r\n              name='task'\r\n              placeholder='Add your task'\r\n              value={enteredTask}\r\n              onChange={handlerTask}\r\n              autocomplete='off'\r\n            />\r\n            <p>Field must not be em</p>\r\n          </div>\r\n          <div className='new-task_control'>\r\n            <label>Time Start</label>\r\n            <input\r\n              type='text'\r\n              name='timeStart'\r\n              placeholder='When do you want to start'\r\n              value={enteredTimeStart}\r\n              onChange={handlerTimeStart}\r\n              autocomplete='off'\r\n            />\r\n          </div>\r\n          <div className='new-task_control'>\r\n            <label>Time End</label>\r\n            <input\r\n              type='text'\r\n              name='timeEnd'\r\n              placeholder='When do you want to finish'\r\n              value={enteredTimeEnd}\r\n              onChange={handlerTimeEnd}\r\n              autocomplete='off'\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='new-task_actions'>\r\n          <button type='submit'>Add Task</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n"]},"metadata":{},"sourceType":"module"}