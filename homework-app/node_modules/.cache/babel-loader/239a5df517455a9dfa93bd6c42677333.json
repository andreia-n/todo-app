{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\annegrea\\\\Downloads\\\\homework\\\\homework-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from './axios';\nimport AddTask from './components/Task/AddTask';\nimport EditTask from './components/Task/EditTasks';\nimport TaskList from './components/Task/TaskList';\nimport Header from './components/Header';\nimport Test from './components/test';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]); //state for edititng mode\n\n  const [editing, setEditing] = useState(false);\n  const initialFormState = {\n    id: null,\n    title: '',\n    timeStart: '',\n    timeEnd: ''\n  };\n  const [curentTask, setCurentTask] = useState(initialFormState);\n\n  const editTask = task => {\n    setEditing(true);\n    setCurentTask({\n      id: task.id,\n      title: task.title,\n      timeStart: task.timeStart,\n      timeEnd: task.timeEnd\n    });\n  };\n\n  const updateTask = async (id, task) => {\n    setEditing(false);\n    const res = await axios.put(`/tasks/${task.id}`, task); // console.log(res.data);\n\n    setTasks(tasks.map(task => {\n      return task.id === id ? { ...res.data\n      } : task;\n    })); // console.log(res.data);\n  }; //add task\n\n\n  const addTask = async task => {\n    // console.log(task);\n    const req = {\n      id: tasks.length + 1,\n      ...task\n    }; // console.log(req);\n\n    const res = await axios.post('/tasks', req);\n    setTasks([...tasks, res.data]);\n  }; //delete task\n\n\n  const deleteTask = async id => {\n    await axios.delete(`/tasks/${id}`);\n    const newTasksList = tasks.filter(task => task.id !== id);\n    setTasks(newTasksList);\n  }; //update task\n\n\n  const getTasks = async () => {\n    const res = await axios.get('/tasks').catch(err => console.log(err));\n\n    if (res && res.data) {\n      setTasks(res.data);\n    }\n  }; // console.log(tasks.length);\n\n\n  useEffect(() => {\n    getTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Test, {\n      st: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-add\",\n        children: editing ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Editing Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(EditTask, {\n            editing: editing,\n            setEditing: setEditing,\n            curentTask: curentTask,\n            updateTask: updateTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Add Tasks for today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n            addTask: addTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-tasks\",\n        children: [tasks.length === 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No tasks found for today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 34\n        }, this), tasks.length !== 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Tasks for Today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n            tasks: tasks,\n            editTask: editTask,\n            deleteTask: deleteTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"SSSwz2walFnI7GrG9OTjLymmT8E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/annegrea/Downloads/homework/homework-app/src/App.js"],"names":["React","useState","useEffect","axios","AddTask","EditTask","TaskList","Header","Test","App","tasks","setTasks","editing","setEditing","initialFormState","id","title","timeStart","timeEnd","curentTask","setCurentTask","editTask","task","updateTask","res","put","map","data","addTask","req","length","post","deleteTask","delete","newTasksList","filter","getTasks","get","catch","err","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport axios from './axios';\r\nimport AddTask from './components/Task/AddTask';\r\nimport EditTask from './components/Task/EditTasks';\r\nimport TaskList from './components/Task/TaskList';\r\nimport Header from './components/Header';\r\nimport Test from './components/test';\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  //state for edititng mode\r\n  const [editing, setEditing] = useState(false);\r\n  const initialFormState = {\r\n    id: null,\r\n    title: '',\r\n    timeStart: '',\r\n    timeEnd: '',\r\n  };\r\n  const [curentTask, setCurentTask] = useState(initialFormState);\r\n\r\n  const editTask = (task) => {\r\n    setEditing(true);\r\n\r\n    setCurentTask({\r\n      id: task.id,\r\n      title: task.title,\r\n      timeStart: task.timeStart,\r\n      timeEnd: task.timeEnd,\r\n    });\r\n  };\r\n\r\n  const updateTask = async (id, task) => {\r\n    setEditing(false);\r\n    const res = await axios.put(`/tasks/${task.id}`, task);\r\n\r\n    // console.log(res.data);\r\n    setTasks(\r\n      tasks.map((task) => {\r\n        return task.id === id ? { ...res.data } : task;\r\n      })\r\n    );\r\n    // console.log(res.data);\r\n  };\r\n  //add task\r\n  const addTask = async (task) => {\r\n    // console.log(task);\r\n    const req = {\r\n      id: tasks.length + 1,\r\n      ...task,\r\n    };\r\n    // console.log(req);\r\n    const res = await axios.post('/tasks', req);\r\n    setTasks([...tasks, res.data]);\r\n  };\r\n  //delete task\r\n  const deleteTask = async (id) => {\r\n    await axios.delete(`/tasks/${id}`);\r\n    const newTasksList = tasks.filter((task) => task.id !== id);\r\n    setTasks(newTasksList);\r\n  };\r\n  //update task\r\n\r\n  const getTasks = async () => {\r\n    const res = await axios.get('/tasks').catch((err) => console.log(err));\r\n    if (res && res.data) {\r\n      setTasks(res.data);\r\n    }\r\n  };\r\n  // console.log(tasks.length);\r\n\r\n  useEffect(() => {\r\n    getTasks();\r\n  }, []);\r\n  return (\r\n    <div className='container'>\r\n      <Header />\r\n      <Test st/>\r\n      <div className='flex-row'>\r\n        <div className='flex-add'>\r\n          {editing ? (\r\n            <React.Fragment>\r\n              <h2>Editing Task</h2>\r\n              <EditTask\r\n                editing={editing}\r\n                setEditing={setEditing}\r\n                curentTask={curentTask}\r\n                updateTask={updateTask}\r\n              />\r\n            </React.Fragment>\r\n          ) : (\r\n            <div>\r\n              <h2>Add Tasks for today</h2>\r\n              <AddTask addTask={addTask} />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className='flex-tasks'>\r\n          {tasks.length === 0 && <h2>No tasks found for today</h2>}\r\n          {tasks.length !== 0 && (\r\n            <>\r\n              <h2>Tasks for Today</h2>\r\n              <TaskList\r\n                tasks={tasks}\r\n                editTask={editTask}\r\n                deleteTask={deleteTask}\r\n              />\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}